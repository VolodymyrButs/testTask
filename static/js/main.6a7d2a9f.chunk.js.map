{"version":3,"sources":["contextProvider.js","components/CustomSwitchs.tsx","components/UserListsTypes.tsx","Users/Users.tsx","User/User.tsx","components/Loading.tsx","App.tsx","index.tsx"],"names":["myContext","React","createContext","ContextProvider","props","useState","viewType","setViewType","isDarkTheme","setIsDarkTheme","isLoading","setIsLoading","Provider","value","children","SwitchWrapperTheme","withStyles","theme","root","marginLeft","breakpoints","up","classes","className","Icon","padding","onClick","IconButton","SwitchStyled","width","height","margin","spacing","switchBase","color","palette","common","white","transform","backgroundColor","grey","opacity","border","thumb","track","borderRadius","transition","transitions","create","boxSizing","checked","focusVisible","onChange","Switch","focusVisibleClassName","disableRipple","CustomSwitch","useContext","CustomSwitchTheme","UsersList","data","useTheme","desktop","useMediaQuery","makeStyles","maxHeight","overflowY","link","textDecoration","item","boxShadow","avatar","objectFit","marginRight","info","display","p","overflow","textOverflow","text","primary","useStylesList","Grid","container","map","user","xs","to","id","src","alt","first_name","last_name","email","UsersListIcon","flexDirection","alignItems","maxWidth","textAlign","useStylesIcon","fetchUsers","a","page","Promise","resolve","setTimeout","axios","get","Users","setPage","queryClient","useQueryClient","useStyles","useQuery","staleTime","status","error","useEffect","total_pages","prefetchQuery","Container","header","navWrapper","disabled","size","edge","justifyContent","alignContent","background","default","useStylesUser","navLink","fontStyle","fontWeight","User","useParams","fetchUser","href","LoadingWrapper","position","top","left","zIndex","LoadingModal","CircularProgress","disableShrink","QueryClient","App","createMuiTheme","type","Wrapper","styled","minWidth","minHeight","QueryClientProvider","client","ThemeProvider","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6a7d2a9f.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nexport const myContext = React.createContext();\n\nconst ContextProvider = (props) => {\n  const [viewType, setViewType] = useState(false);\n  const [isDarkTheme, setIsDarkTheme] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  return (\n    <myContext.Provider\n      value={{\n        viewType,\n        setViewType,\n        isDarkTheme,\n        setIsDarkTheme,\n        isLoading,\n        setIsLoading,\n      }}\n    >\n      {props.children}\n    </myContext.Provider>\n  );\n};\n\nexport default ContextProvider;\n","import { withStyles, Switch } from \"@material-ui/core\";\nimport React, { useContext } from \"react\";\nimport { myContext } from \"contextProvider\";\nimport Brightness6 from \"@material-ui/icons/Brightness6\";\nimport Menu from \"@material-ui/icons/Menu\";\nimport Apps from \"@material-ui/icons/Apps\";\nimport { IconButton } from \"@material-ui/core\";\n\nconst SwitchWrapperTheme = withStyles((theme) => ({\n  root: {\n    marginLeft: 10,\n    [theme.breakpoints.up(\"sm\")]: {\n      marginLeft: 110,\n    },\n  },\n}))(({ classes, ...props }: { classes: any }) => {\n  return <span className={classes.root} {...props} />;\n});\n\nconst Icon = withStyles((theme) => ({\n  root: {\n    padding: \"12px 5px\",\n    [theme.breakpoints.up(\"sm\")]: {\n      padding: 12,\n    },\n  },\n}))(({ classes, onClick, ...props }: { classes: any; onClick: () => void }) => {\n  return <IconButton className={classes.root} {...props} />;\n});\n\nconst SwitchStyled = withStyles((theme) => ({\n  root: {\n    width: 42,\n    height: 26,\n    padding: 0,\n    margin: theme.spacing(1),\n  },\n  switchBase: {\n    color: theme.palette.common.white,\n    padding: 1,\n    \"&$checked\": {\n      transform: \"translateX(16px)\",\n      color: theme.palette.common.white,\n      backgroundColor: theme.palette.grey[400],\n      \"& + $track\": {\n        opacity: 1,\n        color: theme.palette.common.white,\n        backgroundColor: theme.palette.grey[400],\n      },\n    },\n    \"&$focusVisible $thumb\": {\n      color: theme.palette.grey[400],\n      border: \"6px solid #fff\",\n    },\n  },\n  thumb: {\n    width: 24,\n    height: 24,\n  },\n  track: {\n    borderRadius: 26 / 2,\n    border: `2px solid ${theme.palette.grey[400]}`,\n    backgroundColor: theme.palette.grey[400],\n    color: theme.palette.common.white,\n    opacity: 1,\n    transition: theme.transitions.create([\"background-color\", \"border\"]),\n    boxSizing: \"border-box\",\n  },\n  checked: {},\n  focusVisible: {},\n}))(\n  ({\n    classes,\n    checked,\n    onChange,\n    ...props\n  }: {\n    classes: any;\n    checked: boolean;\n    onChange: () => void;\n  }) => {\n    return (\n      <Switch\n        focusVisibleClassName={classes.focusVisible}\n        disableRipple\n        checked={checked}\n        onChange={onChange}\n        classes={{\n          root: classes.root,\n          switchBase: classes.switchBase,\n          thumb: classes.thumb,\n          track: classes.track,\n          checked: classes.checked,\n        }}\n        {...props}\n      />\n    );\n  }\n);\n\nexport const CustomSwitch = () => {\n  const { viewType, setViewType } = useContext(myContext);\n  return (\n    <span>\n      <Icon onClick={() => setViewType(false)}>\n        <Apps />\n      </Icon>\n      <span>\n        <SwitchStyled\n          checked={viewType}\n          onChange={() => setViewType(!viewType)}\n        />\n      </span>\n      <Icon onClick={() => setViewType(true)}>\n        <Menu />\n      </Icon>\n    </span>\n  );\n};\n\nexport const CustomSwitchTheme = () => {\n  const { isDarkTheme, setIsDarkTheme } = useContext(myContext);\n  return (\n    <SwitchWrapperTheme>\n      <IconButton onClick={() => setIsDarkTheme(!isDarkTheme)}>\n        <Brightness6 />\n      </IconButton>\n    </SwitchWrapperTheme>\n  );\n};\n","import { Grid } from \"@material-ui/core\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\n\nimport { Link } from \"react-router-dom\";\n\ninterface User {\n  id: string;\n  first_name: string;\n  last_name: string;\n  avatar: string;\n  email: string;\n}\n\nexport const UsersList = ({ data }: { data: { data: User[] } }) => {\n  const theme = useTheme();\n  const desktop = useMediaQuery(theme.breakpoints.up(\"sm\"));\n\n  const useStylesList = makeStyles({\n    root: {\n      maxHeight: \"calc(100vh - 65px)\",\n      overflowY: \"scroll\",\n    },\n\n    link: {\n      textDecoration: \"none\",\n    },\n    item: {\n      margin: \"5px\",\n      padding: \"16px\",\n      boxShadow: \"inset 0 0 10px #888\",\n      \"&:hover\": { boxShadow: \"inset 0 0 20px #888\" },\n    },\n    avatar: {\n      height: \"40px\",\n      width: \"40px\",\n      objectFit: \"contain\",\n      marginRight: \"10px\",\n      [theme.breakpoints.up(\"sm\")]: {\n        height: \"50px\",\n        width: \"50px\",\n      },\n    },\n    info: {\n      color: \"black\",\n      display: \"inline-block\",\n    },\n    p: {\n      margin: \"3px\",\n      width: 250,\n      overflow: \"hidden\",\n      textOverflow: \"ellipsis\",\n      color: theme.palette.text.primary,\n      [theme.breakpoints.up(\"sm\")]: {\n        width: 280,\n      },\n    },\n  });\n\n  const classes = useStylesList();\n  return (\n    <Grid container className={classes.root}>\n      {data ? (\n        data.data.map((user) => (\n          <Grid item xs={desktop ? 6 : 12} key={user.id}>\n            <Link to={`/user/${user.id}`} className={classes.link}>\n              <div className={classes.item}>\n                <img\n                  src={user.avatar}\n                  alt=\"user_avatar\"\n                  className={classes.avatar}\n                />{\" \"}\n                <div className={classes.info}>\n                  <p className={classes.p}>\n                    Name: {user.first_name} {user.last_name}\n                  </p>\n                  <p className={classes.p}>Email: {user.email}</p>\n                </div>\n              </div>\n            </Link>\n          </Grid>\n        ))\n      ) : (\n        <div>Loading...</div>\n      )}\n    </Grid>\n  );\n};\n\nexport const UsersListIcon = ({ data }: { data: { data: User[] } }) => {\n  const theme = useTheme();\n  const desktop = useMediaQuery(theme.breakpoints.up(\"sm\"));\n\n  const useStylesIcon = makeStyles({\n    root: {\n      maxHeight: \"calc(100vh - 65px)\",\n      overflowY: \"scroll\",\n    },\n    item: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      margin: 5,\n      padding: 5,\n      boxShadow: \"inset 0 0 10px #888\",\n      \"&:hover\": { boxShadow: \"inset 0 0 30px #888\" },\n    },\n    link: { textDecoration: \"none\" },\n    avatar: {\n      height: 200,\n      objectFit: \"contain\",\n      maxWidth: \"100%\",\n      margin: \"10px\",\n    },\n    info: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      color: \"black\",\n      width: \"100%\",\n      textAlign: \"center\",\n      alignItems: \"center\",\n    },\n    p: {\n      margin: \"3px\",\n      maxWidth: 280,\n      overflow: \"hidden\",\n      textOverflow: \"ellipsis\",\n      color: theme.palette.text.primary,\n    },\n  });\n\n  const classes = useStylesIcon();\n  return (\n    <Grid container className={classes.root}>\n      {data ? (\n        data.data.map((user) => (\n          <Grid item xs={desktop ? 6 : 12} key={user.id}>\n            <Link to={`/user/${user.id}`} className={classes.link}>\n              <div className={classes.item}>\n                <img\n                  src={user.avatar}\n                  alt=\"user_avatar\"\n                  className={classes.avatar}\n                />{\" \"}\n                <div className={classes.info}>\n                  <p className={classes.p}>\n                    Name: {user.first_name} {user.last_name}\n                  </p>\n                  <p className={classes.p}>Email: {user.email}</p>\n                </div>\n              </div>\n            </Link>\n          </Grid>\n        ))\n      ) : (\n        <div>Loading...</div>\n      )}\n    </Grid>\n  );\n};\n","import React, { useEffect, useContext } from \"react\";\nimport axios from \"axios\";\nimport { useQuery, useQueryClient } from \"react-query\";\nimport { IconButton, Container } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { CustomSwitch, CustomSwitchTheme } from \"components/CustomSwitchs\";\nimport { myContext } from \"contextProvider\";\nimport { UsersList, UsersListIcon } from \"components/UserListsTypes\";\nimport ArrowBackIos from \"@material-ui/icons/ArrowBackIos\";\nimport ArrowForwardIos from \"@material-ui/icons/ArrowForwardIos\";\nasync function fetchUsers(page = 1) {\n  await new Promise((resolve) => setTimeout(resolve, 1000));\n  const { data } = await axios.get(`https://reqres.in/api/users?page=${page}`);\n  return data;\n}\n\nconst Users = ({\n  page,\n  setPage,\n}: {\n  page: number;\n  setPage: (args: number) => void;\n}) => {\n  const queryClient = useQueryClient();\n  const classes = useStyles();\n  const { viewType, setIsLoading } = useContext(myContext);\n\n  const { status, data, error } = useQuery(\n    [\"users\", page],\n    () => fetchUsers(page),\n    {\n      staleTime: 5000,\n    }\n  );\n  useEffect(() => {\n    if (page < data?.total_pages) {\n      queryClient.prefetchQuery([\"users\", page + 1], () =>\n        fetchUsers(page + 1)\n      );\n    }\n  }, [data, page, queryClient]);\n  switch (status) {\n    case \"loading\":\n      setIsLoading(true);\n      break;\n    default:\n      setIsLoading(false);\n      break;\n  }\n  return (\n    <Container maxWidth=\"md\">\n      <div className={classes.header}>\n        <CustomSwitch />\n        <span className={classes.navWrapper}>\n          <IconButton\n            color=\"primary\"\n            onClick={() => setPage(page - 1)}\n            disabled={page === 1}\n            size={\"small\"}\n          >\n            <ArrowBackIos />\n          </IconButton>\n          <span>Page: {page} </span>\n          <IconButton\n            color=\"primary\"\n            onClick={() => {\n              setPage(page + 1);\n            }}\n            disabled={page === data?.total_pages}\n            size={\"small\"}\n            edge={\"end\"}\n          >\n            <ArrowForwardIos />\n          </IconButton>\n        </span>\n        <CustomSwitchTheme />\n      </div>\n\n      {status === \"error\" && <div>Error: {error}</div>}\n      {status === \"success\" &&\n        (viewType ? <UsersList data={data} /> : <UsersListIcon data={data} />)}\n    </Container>\n  );\n};\n\nexport default Users;\n\nconst useStyles = makeStyles((theme) => ({\n  header: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignContent: \"center\",\n    padding: 5,\n    height: 48,\n    color: theme.palette.text.primary,\n    backgroundColor: theme.palette.background.default,\n  },\n  navWrapper: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n}));\n","import { Container } from \"@material-ui/core\";\nimport { makeStyles, Grid } from \"@material-ui/core\";\nimport ArrowBackIos from \"@material-ui/icons/ArrowBackIos\";\nimport axios from \"axios\";\nimport { myContext } from \"contextProvider\";\nimport React, { useContext } from \"react\";\nimport { useQuery } from \"react-query\";\n\nimport { Link, useParams } from \"react-router-dom\";\n\nasync function fetchUser(id: string) {\n  await new Promise((resolve) => setTimeout(resolve, 1000));\n  const { data } = await axios.get(`https://reqres.in/api/users/${id}`);\n  return data.data;\n}\n\nconst useStylesUser = makeStyles((theme) => ({\n  container: {\n    margin: \"0px auto\",\n    padding: 10,\n  },\n  root: {\n    maxHeight: \"calc(100vh - 45px)\",\n    overflowY: \"scroll\",\n  },\n  item: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    margin: 5,\n    padding: 5,\n  },\n  navLink: {\n    textDecoration: \"none\",\n    color: theme.palette.text.primary,\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  link: {\n    textDecoration: \"none\",\n    color: theme.palette.text.primary,\n    fontStyle: \"italic\",\n  },\n  avatar: {\n    width: 300,\n    objectFit: \"contain\",\n    maxWidth: \"100%\",\n    margin: \"10px\",\n  },\n  info: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    color: \"black\",\n    width: \"100%\",\n    textAlign: \"center\",\n    alignItems: \"center\",\n  },\n  p: {\n    color: theme.palette.text.primary,\n    margin: \"3px\",\n    maxWidth: 280,\n    overflow: \"hidden\",\n    textOverflow: \"ellipsis\",\n    fontWeight: 500,\n  },\n}));\n\nconst User = () => {\n  const { id }: { id: string } = useParams();\n  const { setIsLoading } = useContext(myContext);\n\n  const { data, status, error } = useQuery([\"user\", id], () => fetchUser(id), {\n    staleTime: 5000,\n  });\n  switch (status) {\n    case \"loading\":\n      setIsLoading(true);\n      break;\n    default:\n      setIsLoading(false);\n      break;\n  }\n  const classes = useStylesUser();\n  return (\n    <Container maxWidth=\"md\" className={classes.container}>\n      {status === \"error\" && <div>Error: {error}</div>}\n      {status === \"success\" && (\n        <>\n          <Link to={`/`} className={classes.navLink}>\n            <ArrowBackIos />\n            BACK\n          </Link>\n          <Grid item key={data.id} className={classes.root}>\n            <div className={classes.item}>\n              <img\n                src={data.avatar}\n                alt=\"user_avatar\"\n                className={classes.avatar}\n              />{\" \"}\n              <div className={classes.info}>\n                <p className={classes.p}>\n                  Name: {data.first_name} {data.last_name}\n                </p>\n                <p className={classes.p}>\n                  Email:{\" \"}\n                  <a className={classes.link} href={`mailto:${data.email}`}>\n                    {data.email}\n                  </a>\n                </p>\n              </div>\n            </div>\n          </Grid>\n        </>\n      )}\n    </Container>\n  );\n};\n\nexport default User;\n","import { CircularProgress, withStyles } from \"@material-ui/core\";\nimport React from \"react\";\n\nconst LoadingWrapper = withStyles((theme) => ({\n  root: {\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n    height: \"100vh\",\n    width: \"100vw\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: theme.palette.background.default,\n    opacity: 0.8,\n    zIndex: 1,\n  },\n}))(({ classes, ...props }: { classes: any }) => {\n  return <div className={classes.root} {...props} />;\n});\n\nexport const LoadingModal = () => {\n  return (\n    <LoadingWrapper>\n      <CircularProgress disableShrink />\n    </LoadingWrapper>\n  );\n};\n","import React, { useState } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nimport { ReactQueryDevtools } from \"react-query/devtools\";\nimport { ThemeProvider } from \"@material-ui/core\";\nimport { unstable_createMuiStrictModeTheme as createMuiTheme } from \"@material-ui/core/styles\";\nimport { myContext } from \"contextProvider\";\n\nimport Users from \"Users/Users\";\nimport User from \"User/User\";\nimport { useContext } from \"react\";\nimport { styled } from \"@material-ui/core/styles\";\nimport { LoadingModal } from \"components/Loading\";\n\nconst queryClient = new QueryClient();\n\nconst App = () => {\n  const [page, setPage] = useState(1);\n  const { isDarkTheme, isLoading } = useContext(myContext);\n\n  const theme = createMuiTheme({\n    palette: {\n      type: isDarkTheme ? \"dark\" : \"light\",\n    },\n  });\n\n  const Wrapper = styled(\"div\")({\n    position: \"relative\",\n    minWidth: \"100vw\",\n    minHeight: \"100vh\",\n    backgroundColor: theme.palette.background.default,\n  });\n\n  return (\n    <QueryClientProvider client={queryClient}>\n      <ThemeProvider theme={theme}>\n        <Wrapper>\n          {isLoading && <LoadingModal />}\n          <Router>\n            <Switch>\n              <Route exact path=\"/\">\n                <Users page={page} setPage={setPage} />\n              </Route>\n              <Route path=\"/user/:id\" children={<User />} />\n            </Switch>\n          </Router>\n        </Wrapper>\n      </ThemeProvider>\n      <ReactQueryDevtools />\n    </QueryClientProvider>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nimport ContextProvider from \"contextProvider\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ContextProvider>\n      <App />\n    </ContextProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}