{"version":3,"sources":["contextProvider.js","components/CustomSwitchs.tsx","components/UserListsTypes.tsx","Users/Users.tsx","User/User.tsx","components/Loading.tsx","App.tsx","index.tsx"],"names":["myContext","React","createContext","ContextProvider","props","useState","viewType","setViewType","isDarkTheme","setIsDarkTheme","isLoading","setIsLoading","page","setPage","Provider","value","children","SwitchWrapperTheme","withStyles","theme","root","marginLeft","breakpoints","up","classes","className","Icon","padding","onClick","IconButton","SwitchStyled","width","height","margin","spacing","switchBase","color","palette","common","white","transform","backgroundColor","grey","opacity","border","thumb","track","borderRadius","transition","transitions","create","boxSizing","checked","focusVisible","onChange","Switch","focusVisibleClassName","disableRipple","CustomSwitch","useContext","CustomSwitchTheme","UsersList","data","useTheme","desktop","useMediaQuery","makeStyles","maxHeight","overflowY","link","textDecoration","item","display","boxShadow","avatar","objectFit","marginRight","info","p","marginBottom","overflow","textOverflow","text","primary","useStylesList","Grid","container","map","user","xs","to","id","src","alt","first_name","last_name","email","UsersListIcon","flexDirection","alignItems","maxWidth","textAlign","useStylesIcon","Users","queryClient","useQueryClient","useStyles","fetchUsers","a","Promise","resolve","setTimeout","axios","get","useQuery","staleTime","status","error","useEffect","total_pages","prefetchQuery","Container","header","navWrapper","disabled","size","edge","justifyContent","alignContent","background","default","useStylesUser","navLink","fontStyle","fontWeight","User","useParams","fetchUser","href","LoadingWrapper","position","top","left","zIndex","LoadingModal","CircularProgress","disableShrink","QueryClient","App","createMuiTheme","type","Wrapper","styled","minWidth","minHeight","QueryClientProvider","client","ThemeProvider","basename","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a39e4097.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nexport const myContext = React.createContext();\n\nexport const ContextProvider = (props) => {\n  const [viewType, setViewType] = useState(false);\n  const [isDarkTheme, setIsDarkTheme] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [page, setPage] = useState(1);\n  return (\n    <myContext.Provider\n      value={{\n        viewType,\n        setViewType,\n        isDarkTheme,\n        setIsDarkTheme,\n        isLoading,\n        setIsLoading,\n        page,\n        setPage,\n      }}\n    >\n      {props.children}\n    </myContext.Provider>\n  );\n};\n","import { withStyles, Switch } from \"@material-ui/core\";\nimport React, { useContext } from \"react\";\nimport { myContext } from \"contextProvider\";\nimport Brightness6 from \"@material-ui/icons/Brightness6\";\nimport Menu from \"@material-ui/icons/Menu\";\nimport Apps from \"@material-ui/icons/Apps\";\nimport { IconButton } from \"@material-ui/core\";\n\nconst SwitchWrapperTheme = withStyles((theme) => ({\n  root: {\n    marginLeft: 5,\n    [theme.breakpoints.up(\"sm\")]: {\n      marginLeft: 110,\n    },\n  },\n}))(({ classes, ...props }: { classes: any }) => {\n  return <span className={classes.root} {...props} />;\n});\n\nconst Icon = withStyles((theme) => ({\n  root: {\n    padding: \"12px 5px\",\n    [theme.breakpoints.up(\"sm\")]: {\n      padding: 12,\n    },\n  },\n}))(({ classes, onClick, ...props }: { classes: any; onClick: () => void }) => {\n  return <IconButton className={classes.root} onClick={onClick} {...props} />;\n});\n\nconst SwitchStyled = withStyles((theme) => ({\n  root: {\n    width: 42,\n    height: 26,\n    padding: 0,\n    margin: theme.spacing(1),\n  },\n  switchBase: {\n    color: theme.palette.common.white,\n    padding: 1,\n    \"&$checked\": {\n      transform: \"translateX(16px)\",\n      color: theme.palette.common.white,\n      backgroundColor: theme.palette.grey[400],\n      \"& + $track\": {\n        opacity: 1,\n        color: theme.palette.common.white,\n        backgroundColor: theme.palette.grey[400],\n      },\n    },\n    \"&$focusVisible $thumb\": {\n      color: theme.palette.grey[400],\n      border: \"6px solid #fff\",\n    },\n  },\n  thumb: {\n    width: 24,\n    height: 24,\n  },\n  track: {\n    borderRadius: 26 / 2,\n    border: `2px solid ${theme.palette.grey[400]}`,\n    backgroundColor: theme.palette.grey[400],\n    color: theme.palette.common.white,\n    opacity: 1,\n    transition: theme.transitions.create([\"background-color\", \"border\"]),\n    boxSizing: \"border-box\",\n  },\n  checked: {},\n  focusVisible: {},\n}))(\n  ({\n    classes,\n    checked,\n    onChange,\n    ...props\n  }: {\n    classes: any;\n    checked: boolean;\n    onChange: () => void;\n  }) => {\n    return (\n      <Switch\n        focusVisibleClassName={classes.focusVisible}\n        disableRipple\n        checked={checked}\n        onChange={onChange}\n        classes={{\n          root: classes.root,\n          switchBase: classes.switchBase,\n          thumb: classes.thumb,\n          track: classes.track,\n          checked: classes.checked,\n        }}\n        {...props}\n      />\n    );\n  }\n);\n\nexport const CustomSwitch = () => {\n  const { viewType, setViewType } = useContext(myContext);\n  return (\n    <span>\n      <Icon onClick={() => setViewType(false)}>\n        <Apps />\n      </Icon>\n      <span>\n        <SwitchStyled\n          checked={viewType}\n          onChange={() => setViewType(!viewType)}\n        />\n      </span>\n      <Icon onClick={() => setViewType(true)}>\n        <Menu />\n      </Icon>\n    </span>\n  );\n};\n\nexport const CustomSwitchTheme = () => {\n  const { isDarkTheme, setIsDarkTheme } = useContext(myContext);\n  return (\n    <SwitchWrapperTheme>\n      <Icon onClick={() => setIsDarkTheme(!isDarkTheme)}>\n        <Brightness6 />\n      </Icon>\n    </SwitchWrapperTheme>\n  );\n};\n","import { Grid } from \"@material-ui/core\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\n\nimport { Link } from \"react-router-dom\";\n\ninterface User {\n  id: string;\n  first_name: string;\n  last_name: string;\n  avatar: string;\n  email: string;\n}\n\nexport const UsersList = ({ data }: { data: { data: User[] } }) => {\n  const theme = useTheme();\n  const desktop = useMediaQuery(theme.breakpoints.up(\"sm\"));\n\n  const useStylesList = makeStyles({\n    root: {\n      maxHeight: \"calc(100vh - 65px)\",\n      overflowY: \"scroll\",\n    },\n\n    link: {\n      textDecoration: \"none\",\n    },\n    item: {\n      display: \"flex\",\n      margin: \"5px\",\n      padding: \"16px\",\n      boxShadow: \"inset 0 0 10px #888\",\n      \"&:hover\": { boxShadow: \"inset 0 0 20px #888\" },\n    },\n    avatar: {\n      height: \"40px\",\n      width: \"40px\",\n      objectFit: \"contain\",\n      marginRight: \"10px\",\n      [theme.breakpoints.up(\"sm\")]: {\n        height: \"50px\",\n        width: \"50px\",\n      },\n    },\n    info: {\n      color: \"black\",\n      display: \"inline-block\",\n    },\n    p: {\n      padding: \"0 3px\",\n      margin: 0,\n      marginBottom: 3,\n      width: 240,\n      overflow: \"hidden\",\n      textOverflow: \"ellipsis\",\n      color: theme.palette.text.primary,\n      [theme.breakpoints.up(\"sm\")]: {\n        width: 280,\n      },\n    },\n  });\n\n  const classes = useStylesList();\n  return (\n    <Grid container className={classes.root}>\n      {data ? (\n        data.data.map((user) => (\n          <Grid item xs={desktop ? 6 : 12} key={user.id}>\n            <Link to={`/user/${user.id}`} className={classes.link}>\n              <div className={classes.item}>\n                <img\n                  src={user.avatar}\n                  alt=\"user_avatar\"\n                  className={classes.avatar}\n                />{\" \"}\n                <div className={classes.info}>\n                  <p className={classes.p}>\n                    Name: {user.first_name} {user.last_name}\n                  </p>\n                  <p className={classes.p}>Email: {user.email}</p>\n                </div>\n              </div>\n            </Link>\n          </Grid>\n        ))\n      ) : (\n        <div>Loading...</div>\n      )}\n    </Grid>\n  );\n};\n\nexport const UsersListIcon = ({ data }: { data: { data: User[] } }) => {\n  const theme = useTheme();\n  const desktop = useMediaQuery(theme.breakpoints.up(\"sm\"));\n\n  const useStylesIcon = makeStyles({\n    root: {\n      maxHeight: \"calc(100vh - 65px)\",\n      overflowY: \"scroll\",\n    },\n    item: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      margin: 5,\n      padding: 5,\n      boxShadow: \"inset 0 0 10px #888\",\n      \"&:hover\": { boxShadow: \"inset 0 0 30px #888\" },\n    },\n    link: { textDecoration: \"none\" },\n    avatar: {\n      height: 200,\n      objectFit: \"contain\",\n      maxWidth: \"100%\",\n      margin: \"10px\",\n    },\n    info: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      color: \"black\",\n      width: \"100%\",\n      textAlign: \"center\",\n      alignItems: \"center\",\n    },\n    p: {\n      padding: \"0 3px\",\n      margin: 0,\n      marginBottom: 8,\n      maxWidth: 280,\n      overflow: \"hidden\",\n      textOverflow: \"ellipsis\",\n      color: theme.palette.text.primary,\n    },\n  });\n\n  const classes = useStylesIcon();\n  return (\n    <Grid container className={classes.root}>\n      {data ? (\n        data.data.map((user) => (\n          <Grid item xs={desktop ? 6 : 12} key={user.id}>\n            <Link to={`/user/${user.id}`} className={classes.link}>\n              <div className={classes.item}>\n                <img\n                  src={user.avatar}\n                  alt=\"user_avatar\"\n                  className={classes.avatar}\n                />{\" \"}\n                <div className={classes.info}>\n                  <p className={classes.p}>\n                    Name: {user.first_name} {user.last_name}\n                  </p>\n                  <p className={classes.p}>Email: {user.email}</p>\n                </div>\n              </div>\n            </Link>\n          </Grid>\n        ))\n      ) : (\n        <div>Loading...</div>\n      )}\n    </Grid>\n  );\n};\n","import React, { useEffect, useContext } from \"react\";\nimport axios from \"axios\";\nimport { useQuery, useQueryClient } from \"react-query\";\nimport { IconButton, Container } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { CustomSwitch, CustomSwitchTheme } from \"components/CustomSwitchs\";\nimport { myContext } from \"contextProvider\";\nimport { UsersList, UsersListIcon } from \"components/UserListsTypes\";\nimport ArrowBackIos from \"@material-ui/icons/ArrowBackIos\";\nimport ArrowForwardIos from \"@material-ui/icons/ArrowForwardIos\";\n\nconst Users = () => {\n  const queryClient = useQueryClient();\n  const classes = useStyles();\n  const { viewType, setIsLoading, page, setPage } = useContext(myContext);\n\n  async function fetchUsers(page: number) {\n    await new Promise((resolve) => setTimeout(resolve, 1000));\n    const { data } = await axios.get(\n      `https://reqres.in/api/users?page=${page}`\n    );\n    return data;\n  }\n\n  const { status, data, error } = useQuery(\n    [\"users\", page],\n    () => fetchUsers(page),\n    {\n      staleTime: 5000,\n    }\n  );\n  useEffect(() => {\n    if (page < data?.total_pages) {\n      queryClient.prefetchQuery([\"users\", page + 1], () =>\n        fetchUsers(page + 1)\n      );\n    }\n  }, [data, page, queryClient]);\n  switch (status) {\n    case \"loading\":\n      setIsLoading(true);\n      break;\n    default:\n      setIsLoading(false);\n      break;\n  }\n  return (\n    <Container maxWidth=\"md\" className={classes.container}>\n      <div className={classes.header}>\n        <CustomSwitch />\n        <span className={classes.navWrapper}>\n          <IconButton\n            color=\"primary\"\n            onClick={() => setPage(page - 1)}\n            disabled={page === 1}\n            size={\"small\"}\n          >\n            <ArrowBackIos />\n          </IconButton>\n          <span>Page: {page} </span>\n          <IconButton\n            color=\"primary\"\n            onClick={() => {\n              setPage(page + 1);\n            }}\n            disabled={page === data?.total_pages}\n            size={\"small\"}\n            edge={\"end\"}\n          >\n            <ArrowForwardIos />\n          </IconButton>\n        </span>\n        <CustomSwitchTheme />\n      </div>\n\n      {status === \"error\" && <div>Error: {error}</div>}\n      {status === \"success\" &&\n        (viewType ? <UsersList data={data} /> : <UsersListIcon data={data} />)}\n    </Container>\n  );\n};\n\nexport default Users;\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    padding: 0,\n  },\n  header: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignContent: \"center\",\n    padding: 5,\n    height: 48,\n    color: theme.palette.text.primary,\n    backgroundColor: theme.palette.background.default,\n  },\n  navWrapper: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n}));\n","import { Container } from \"@material-ui/core\";\nimport { makeStyles, Grid } from \"@material-ui/core\";\nimport ArrowBackIos from \"@material-ui/icons/ArrowBackIos\";\nimport axios from \"axios\";\nimport { myContext } from \"contextProvider\";\nimport React, { useContext } from \"react\";\nimport { useQuery } from \"react-query\";\n\nimport { Link, useParams } from \"react-router-dom\";\n\nasync function fetchUser(id: string) {\n  await new Promise((resolve) => setTimeout(resolve, 1000));\n  const { data } = await axios.get(`https://reqres.in/api/users/${id}`);\n  return data.data;\n}\n\nconst useStylesUser = makeStyles((theme) => ({\n  container: {\n    margin: \"0px auto\",\n    padding: 10,\n  },\n  root: {\n    maxHeight: \"calc(100vh - 45px)\",\n    overflowY: \"scroll\",\n  },\n  item: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    margin: 5,\n    padding: 5,\n  },\n  navLink: {\n    textDecoration: \"none\",\n    color: theme.palette.text.primary,\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  link: {\n    textDecoration: \"none\",\n    color: theme.palette.text.primary,\n    fontStyle: \"italic\",\n  },\n  avatar: {\n    width: 300,\n    objectFit: \"contain\",\n    maxWidth: \"100%\",\n    margin: \"10px\",\n  },\n  info: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    color: \"black\",\n    width: \"100%\",\n    textAlign: \"center\",\n    alignItems: \"center\",\n  },\n  p: {\n    color: theme.palette.text.primary,\n    margin: \"3px\",\n    maxWidth: 280,\n    overflow: \"hidden\",\n    textOverflow: \"ellipsis\",\n    fontWeight: 500,\n  },\n}));\n\nconst User = () => {\n  const { id }: { id: string } = useParams();\n  const { setIsLoading } = useContext(myContext);\n\n  const { data, status, error } = useQuery([\"user\", id], () => fetchUser(id), {\n    staleTime: 5000,\n  });\n  switch (status) {\n    case \"loading\":\n      setIsLoading(true);\n      break;\n    default:\n      setIsLoading(false);\n      break;\n  }\n  const classes = useStylesUser();\n  return (\n    <Container maxWidth=\"md\" className={classes.container}>\n      {status === \"error\" && <div>Error: {error}</div>}\n      {status === \"success\" && (\n        <>\n          <Link to={`/`} className={classes.navLink}>\n            <ArrowBackIos />\n            BACK\n          </Link>\n          <Grid item key={data.id} className={classes.root}>\n            <div className={classes.item}>\n              <img\n                src={data.avatar}\n                alt=\"user_avatar\"\n                className={classes.avatar}\n              />{\" \"}\n              <div className={classes.info}>\n                <p className={classes.p}>\n                  Name: {data.first_name} {data.last_name}\n                </p>\n                <p className={classes.p}>\n                  Email:{\" \"}\n                  <a className={classes.link} href={`mailto:${data.email}`}>\n                    {data.email}\n                  </a>\n                </p>\n              </div>\n            </div>\n          </Grid>\n        </>\n      )}\n    </Container>\n  );\n};\n\nexport default User;\n","import { CircularProgress, withStyles } from \"@material-ui/core\";\nimport React from \"react\";\n\nconst LoadingWrapper = withStyles((theme) => ({\n  root: {\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n    height: \"100vh\",\n    width: \"100vw\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: theme.palette.background.default,\n    opacity: 0.8,\n    zIndex: 1,\n  },\n}))(({ classes, ...props }: { classes: any }) => {\n  return <div className={classes.root} {...props} />;\n});\n\nexport const LoadingModal = () => {\n  return (\n    <LoadingWrapper>\n      <CircularProgress disableShrink />\n    </LoadingWrapper>\n  );\n};\n","import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nimport { ReactQueryDevtools } from \"react-query/devtools\";\nimport { ThemeProvider } from \"@material-ui/core\";\nimport { unstable_createMuiStrictModeTheme as createMuiTheme } from \"@material-ui/core/styles\";\nimport { myContext } from \"contextProvider\";\n\nimport Users from \"Users/Users\";\nimport User from \"User/User\";\nimport { useContext } from \"react\";\nimport { styled } from \"@material-ui/core/styles\";\nimport { LoadingModal } from \"components/Loading\";\n\nconst queryClient = new QueryClient();\n\nconst App = () => {\n  const { isDarkTheme, isLoading } = useContext(myContext);\n\n  const theme = createMuiTheme({\n    palette: {\n      type: isDarkTheme ? \"dark\" : \"light\",\n    },\n  });\n\n  const Wrapper = styled(\"div\")({\n    position: \"relative\",\n    minWidth: \"100vw\",\n    minHeight: \"100vh\",\n    backgroundColor: theme.palette.background.default,\n  });\n\n  return (\n    <QueryClientProvider client={queryClient}>\n      <ThemeProvider theme={theme}>\n        <Wrapper>\n          {isLoading && <LoadingModal />}\n          <Router basename=\"/testTask\">\n            <Switch>\n              <Route exact path=\"/\">\n                <Users />\n              </Route>\n              <Route path=\"/user/:id\" children={<User />} />\n            </Switch>\n          </Router>\n        </Wrapper>\n      </ThemeProvider>\n      <ReactQueryDevtools />\n    </QueryClientProvider>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nimport { ContextProvider } from \"contextProvider\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ContextProvider>\n      <App />\n    </ContextProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}