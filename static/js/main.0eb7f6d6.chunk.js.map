{"version":3,"sources":["components/constants.ts","contextProvider.tsx","localStorage.ts","components/UserListsTypes.tsx","components/ThemeSwitcher.tsx","components/ViewSwitcher.tsx","components/Headers.tsx","components/Loading.tsx","components/BadRequest.tsx","Users/Users.tsx","User/User.tsx","components/MainWrapper.tsx","App.tsx","index.tsx"],"names":["VIEW_TYPE_ICONS","VIEW_TYPE_LIST","AppContext","createContext","viewType","setViewType","arg","isDarkTheme","setIsDarkTheme","initialSettings","serializedState","window","localStorage","getItem","JSON","parse","err","loadState","ContextProvider","props","useState","useEffect","state","stringify","setItem","console","log","saveState","Provider","value","children","useStylesList","makeStyles","theme","root","maxHeight","overflowY","link","textDecoration","item","display","margin","padding","boxShadow","itemIcon","flexDirection","alignItems","avatar","height","width","objectFit","marginRight","breakpoints","up","avatarIcon","maxWidth","info","infoIcon","textAlign","paragraph","marginBottom","overflow","textOverflow","color","palette","text","primary","UsersList","data","useTheme","desktop","useMediaQuery","useContext","classes","Grid","container","className","map","user","xs","to","pathname","id","page","src","alt","first_name","last_name","email","SwitchWrapperTheme","withStyles","marginLeft","Icon","onClick","IconButton","CustomSwitchTheme","switchStyles","spacing","switchBase","common","white","transform","backgroundColor","grey","opacity","border","thumb","track","borderRadius","transition","transitions","create","boxSizing","checked","focusVisible","s","alignContent","CustomSwitchView","Menu","Switch","focusVisibleClassName","disableRipple","onChange","Apps","useStylesHeaders","header","justifyContent","background","default","borderBottom","navWrapper","navLink","UsersHeader","pageCount","URLSearchParams","useLocation","search","get","ID","Number","disabled","size","edge","UserHeader","location","LoadingWrapper","position","top","left","zIndex","LoadingModal","CircularProgress","disableShrink","useStyles","fontSize","BadRequestModal","Button","variant","fetchUsers","a","axios","Users","queryClient","useQueryClient","useQuery","staleTime","status","total_pages","prefetchQuery","Container","isNaN","length","useUserStyles","fontStyle","fontWeight","User","useParams","fetchUser","href","target","Wrapper","minWidth","minHeight","App","createMuiTheme","type","ThemeProvider","basename","exact","path","QueryClient","ReactDOM","render","StrictMode","QueryClientProvider","client","document","getElementById"],"mappings":"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","file":"static/js/main.0eb7f6d6.chunk.js","sourcesContent":["export const VIEW_TYPE_ICONS = 'icons'\nexport const VIEW_TYPE_LIST = 'list'\n","import React, { useState, createContext, useEffect } from 'react'\nimport { loadState, saveState } from 'localStorage'\nimport { VIEW_TYPE_ICONS } from 'components/constants'\n\nexport const AppContext = createContext({\n  viewType: VIEW_TYPE_ICONS,\n  setViewType: (arg: string) => {\n    arg\n  },\n  isDarkTheme: false,\n  setIsDarkTheme: (arg: boolean) => {\n    arg\n  },\n})\n\nconst initialSettings = loadState()\nexport const ContextProvider = (props: { children: JSX.Element }) => {\n  const [viewType, setViewType] = useState(\n    initialSettings.viewType || VIEW_TYPE_ICONS\n  )\n  const [isDarkTheme, setIsDarkTheme] = useState(\n    initialSettings.isDarkTheme || false\n  )\n\n  useEffect(() => saveState({ viewType, isDarkTheme }), [viewType, isDarkTheme])\n\n  return (\n    <AppContext.Provider\n      value={{\n        viewType,\n        setViewType,\n        isDarkTheme,\n        setIsDarkTheme,\n      }}\n    >\n      {props.children}\n    </AppContext.Provider>\n  )\n}\n","export const loadState = () => {\n  try {\n    const serializedState = window && window.localStorage.getItem('state')\n    if (serializedState === null) {\n      return []\n    }\n    return JSON.parse(serializedState)\n  } catch (err) {\n    return []\n  }\n}\n\nexport const saveState = (state: {}) => {\n  try {\n    const serializedState = JSON.stringify(state)\n    window && window.localStorage.setItem('state', serializedState)\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err)\n  }\n}\n","import React, { useContext } from 'react'\nimport { Grid } from '@material-ui/core'\nimport { makeStyles, useTheme } from '@material-ui/core/styles'\nimport useMediaQuery from '@material-ui/core/useMediaQuery'\nimport { AppContext } from 'contextProvider'\n\nimport { Link } from 'react-router-dom'\nimport { VIEW_TYPE_ICONS } from './constants'\n\ninterface User {\n  id: string\n  /* eslint-disable-next-line camelcase */\n  first_name: string\n  /* eslint-disable-next-line camelcase */\n  last_name: string\n  avatar: string\n  email: string\n}\n\nconst useStylesList = makeStyles((theme) => ({\n  root: {\n    maxHeight: 'calc(100vh - 65px)',\n    overflowY: 'scroll',\n  },\n  link: {\n    textDecoration: 'none',\n  },\n  item: {\n    display: 'flex',\n    margin: '5px',\n    padding: '16px',\n    boxShadow: 'inset 0 0 10px #888',\n    '&:hover': { boxShadow: 'inset 0 0 20px #888' },\n  },\n  itemIcon: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    margin: 5,\n    padding: 5,\n    boxShadow: 'inset 0 0 10px #888',\n    '&:hover': { boxShadow: 'inset 0 0 30px #888' },\n  },\n  avatar: {\n    height: '40px',\n    width: '40px',\n    objectFit: 'contain',\n    marginRight: '10px',\n    [theme.breakpoints.up('sm')]: {\n      height: '50px',\n      width: '50px',\n    },\n  },\n  avatarIcon: {\n    height: 200,\n    objectFit: 'contain',\n    maxWidth: '100%',\n    margin: '10px',\n  },\n  info: {\n    display: 'inline-block',\n  },\n  infoIcon: {\n    display: 'flex',\n    flexDirection: 'column',\n    width: '100%',\n    textAlign: 'center',\n    alignItems: 'center',\n  },\n  paragraph: {\n    padding: '0 3px',\n    margin: 0,\n    marginBottom: 8,\n    width: 240,\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    color: theme.palette.text.primary,\n    [theme.breakpoints.up('sm')]: {\n      width: 280,\n    },\n  },\n}))\n\nexport const UsersList = ({\n  data,\n}: {\n  data: { data: User[]; page: number }\n}) => {\n  const theme = useTheme()\n  const desktop = useMediaQuery(theme.breakpoints.up('md'))\n  const { viewType } = useContext(AppContext)\n  const classes = useStylesList()\n  return (\n    <Grid container className={classes.root}>\n      {data.data.map((user) => {\n        return (\n          <Grid item xs={desktop ? 6 : 12} key={user.id}>\n            <Link\n              to={{\n                pathname: `/user/${user.id}`,\n                state: { page: data.page },\n              }}\n              className={classes.link}\n            >\n              {viewType === VIEW_TYPE_ICONS ? (\n                <div className={classes.itemIcon}>\n                  <img\n                    src={user.avatar}\n                    alt=\"user_avatar\"\n                    className={classes.avatarIcon}\n                  />{' '}\n                  <div className={classes.infoIcon}>\n                    <p className={classes.paragraph}>\n                      Name: {user.first_name} {user.last_name}\n                    </p>\n                    <p className={classes.paragraph}>Email: {user.email}</p>\n                  </div>\n                </div>\n              ) : (\n                <div className={classes.item}>\n                  <img\n                    src={user.avatar}\n                    alt=\"user_avatar\"\n                    className={classes.avatar}\n                  />{' '}\n                  <div className={classes.info}>\n                    <p className={classes.paragraph}>\n                      Name: {user.first_name} {user.last_name}\n                    </p>\n                    <p className={classes.paragraph}>Email: {user.email}</p>\n                  </div>\n                </div>\n              )}\n            </Link>\n          </Grid>\n        )\n      })}\n    </Grid>\n  )\n}\n","import React, { useContext } from 'react'\nimport { withStyles, IconButton } from '@material-ui/core'\nimport Brightness6 from '@material-ui/icons/Brightness6'\n\nimport { AppContext } from 'contextProvider'\nimport { ClassNameMap } from '@material-ui/core/styles/withStyles'\n\nconst SwitchWrapperTheme = withStyles((theme) => ({\n  root: {\n    marginLeft: 5,\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: 110,\n    },\n  },\n}))(({ classes, ...props }: { classes: ClassNameMap<'root'> }) => {\n  return <span className={classes.root} {...props} />\n})\n\nconst Icon = withStyles((theme) => ({\n  root: {\n    padding: '12px 5px',\n    [theme.breakpoints.up('sm')]: {\n      padding: 12,\n    },\n  },\n}))(\n  ({\n    classes,\n    onClick,\n    ...props\n  }: {\n    classes: ClassNameMap<'root'>\n    onClick: () => void\n  }) => {\n    return <IconButton className={classes.root} onClick={onClick} {...props} />\n  }\n)\n\nexport const CustomSwitchTheme = () => {\n  const { isDarkTheme, setIsDarkTheme } = useContext(AppContext)\n  const changeTheme = () => setIsDarkTheme(!isDarkTheme)\n  return (\n    <SwitchWrapperTheme>\n      <Icon onClick={changeTheme}>\n        <Brightness6 />\n      </Icon>\n    </SwitchWrapperTheme>\n  )\n}\n","import React, { useContext } from 'react'\nimport { IconButton, Switch, withStyles } from '@material-ui/core'\nimport makeStyles from '@material-ui/core/styles/makeStyles'\nimport { Apps, Menu } from '@material-ui/icons'\n\nimport { AppContext } from 'contextProvider'\nimport { ClassNameMap } from '@material-ui/core/styles/withStyles'\nimport { VIEW_TYPE_LIST, VIEW_TYPE_ICONS } from 'components/constants'\n\nconst Icon = withStyles((theme) => ({\n  root: {\n    padding: '12px 5px',\n    [theme.breakpoints.up('sm')]: {\n      padding: 12,\n    },\n  },\n}))(\n  ({\n    classes,\n    onClick,\n    ...props\n  }: {\n    classes: ClassNameMap<'root'>\n    onClick: () => void\n  }) => {\n    return <IconButton className={classes.root} onClick={onClick} {...props} />\n  }\n)\n\nconst switchStyles = makeStyles((theme) => ({\n  root: {\n    width: 42,\n    height: 26,\n    padding: 0,\n    margin: theme.spacing(1),\n  },\n  switchBase: {\n    color: theme.palette.common.white,\n    padding: 1,\n    '&$checked': {\n      transform: 'translateX(16px)',\n      color: theme.palette.common.white,\n      backgroundColor: theme.palette.grey[400],\n      '& + $track': {\n        opacity: 1,\n        color: theme.palette.common.white,\n        backgroundColor: theme.palette.grey[400],\n      },\n    },\n    '&$focusVisible $thumb': {\n      color: theme.palette.grey[400],\n      border: '6px solid #fff',\n    },\n  },\n  thumb: {\n    width: 24,\n    height: 24,\n  },\n  track: {\n    borderRadius: 26 / 2,\n    border: `2px solid ${theme.palette.grey[400]}`,\n    backgroundColor: theme.palette.grey[400],\n    color: theme.palette.common.white,\n    opacity: 1,\n    transition: theme.transitions.create(['background-color', 'border']),\n    boxSizing: 'border-box',\n  },\n  checked: {},\n  focusVisible: {},\n  s: {\n    display: 'flex',\n    alignContent: 'center',\n  },\n}))\n\nexport const CustomSwitchView = () => {\n  const { viewType, setViewType } = useContext(AppContext)\n  const changeViewType = () =>\n    setViewType(viewType === VIEW_TYPE_LIST ? VIEW_TYPE_ICONS : VIEW_TYPE_LIST)\n  const setViewTypeToIcons = () => setViewType(VIEW_TYPE_ICONS)\n  const setViewTypeToList = () => setViewType(VIEW_TYPE_LIST)\n  const classes = switchStyles()\n  return (\n    <span>\n      <Icon onClick={setViewTypeToList}>\n        <Menu />\n      </Icon>\n      <span>\n        <Switch\n          focusVisibleClassName={classes.focusVisible}\n          disableRipple\n          checked={viewType === VIEW_TYPE_ICONS}\n          onChange={changeViewType}\n          classes={{\n            root: classes.root,\n            switchBase: classes.switchBase,\n            thumb: classes.thumb,\n            track: classes.track,\n            checked: classes.checked,\n          }}\n        />\n      </span>\n\n      <Icon onClick={setViewTypeToIcons}>\n        <Apps />\n      </Icon>\n    </span>\n  )\n}\n","import React from 'react'\nimport { IconButton } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\nimport ArrowBackIos from '@material-ui/icons/ArrowBackIos'\nimport ArrowForwardIos from '@material-ui/icons/ArrowForwardIos'\nimport { Link, useLocation } from 'react-router-dom'\n\nimport { CustomSwitchTheme } from 'components/ThemeSwitcher'\nimport { CustomSwitchView } from 'components/ViewSwitcher'\n\nconst useStylesHeaders = makeStyles((theme) => ({\n  header: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignContent: 'center',\n    padding: 5,\n    height: 48,\n    color: theme.palette.text.primary,\n    backgroundColor: theme.palette.background.default,\n    borderBottom: `1px solid ${theme.palette.text.primary}`,\n  },\n  navWrapper: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  navLink: {\n    textDecoration: 'none',\n    color: theme.palette.text.primary,\n    display: 'flex',\n    alignItems: 'center',\n  },\n}))\n\nfunction useQueryParam() {\n  return new URLSearchParams(useLocation().search)\n}\n\nexport const UsersHeader = ({ pageCount }: { pageCount: number }) => {\n  const classes = useStylesHeaders()\n  let query = useQueryParam()\n  const page = query.get('page')\n  const ID = Number(page) || 1\n  return (\n    <div className={classes.header}>\n      <CustomSwitchView />\n      <span className={classes.navWrapper}>\n        <Link to={ID === 1 ? `/?page=${ID}` : `/?page=${ID - 1}`}>\n          <IconButton color=\"primary\" disabled={ID === 1} size={'small'}>\n            <ArrowBackIos />\n          </IconButton>\n        </Link>\n        <span>Page: {ID} </span>\n        <Link to={ID === pageCount ? `/?page=${ID}` : `/?page=${ID + 1}`}>\n          <IconButton\n            color=\"primary\"\n            disabled={ID === pageCount}\n            size={'small'}\n            edge={'end'}\n          >\n            <ArrowForwardIos />\n          </IconButton>\n        </Link>\n      </span>\n      <CustomSwitchTheme />\n    </div>\n  )\n}\n\nexport const UserHeader = () => {\n  const classes = useStylesHeaders()\n  const location = useLocation<{ page: number }>()\n\n  return (\n    <div className={classes.header}>\n      <Link\n        to={location.state ? `/?page=${location.state.page}` : `/?page=1`}\n        className={classes.navLink}\n      >\n        <ArrowBackIos />\n        BACK\n      </Link>\n      <CustomSwitchTheme />\n    </div>\n  )\n}\n","import React from 'react'\nimport { CircularProgress, withStyles } from '@material-ui/core'\nimport { ClassNameMap } from '@material-ui/core/styles/withStyles'\n\nconst LoadingWrapper = withStyles((theme) => ({\n  root: {\n    position: 'fixed',\n    top: 0,\n    left: 0,\n    height: '100vh',\n    width: '100vw',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: theme.palette.background.default,\n    opacity: 0.8,\n    zIndex: 1,\n  },\n}))(({ classes, ...props }: { classes: ClassNameMap<'root'> }) => {\n  return <div className={classes.root} {...props} />\n})\n\nexport const LoadingModal = () => {\n  return (\n    <LoadingWrapper>\n      <CircularProgress disableShrink />\n    </LoadingWrapper>\n  )\n}\n","import React from 'react'\nimport { Button, makeStyles } from '@material-ui/core'\nimport { Link } from 'react-router-dom'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    position: 'fixed',\n    top: 0,\n    left: 0,\n    height: '100vh',\n    width: '100vw',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: theme.palette.background.default,\n    opacity: 0.8,\n    zIndex: 1,\n  },\n  paragraph: {\n    textAlign: 'center',\n    color: theme.palette.text.primary,\n    fontSize: 30,\n  },\n  link: {\n    textDecoration: 'none',\n  },\n}))\n\nexport const BadRequestModal = () => {\n  const classes = useStyles()\n  return (\n    <div className={classes.root}>\n      <p className={classes.paragraph}>Something went wrong</p>\n      <Link to={'/?page=1'} className={classes.link}>\n        <Button variant=\"contained\" color=\"primary\">\n          To Main Page\n        </Button>\n      </Link>\n    </div>\n  )\n}\n","import React, { useEffect } from 'react'\nimport axios from 'axios'\nimport { useQuery, useQueryClient } from 'react-query'\nimport { Container } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\n\nimport { UsersList } from 'components/UserListsTypes'\nimport { UsersHeader } from 'components/Headers'\nimport { LoadingModal } from 'components/Loading'\nimport { useLocation } from 'react-router-dom'\nimport { BadRequestModal } from 'components/BadRequest'\n\nconst useStyles = makeStyles({\n  container: {\n    padding: 0,\n  },\n})\n\nfunction useQueryParam() {\n  return new URLSearchParams(useLocation().search)\n}\n\nasync function fetchUsers(ID: number) {\n  const { data } = await axios.get(`https://reqres.in/api/users?page=${ID}`)\n  return data\n}\n\nconst Users = () => {\n  let query = useQueryParam()\n  const page = query.get('page') || 1\n  const ID = Number(page)\n  const queryClient = useQueryClient()\n  const classes = useStyles()\n\n  const { status, data } = useQuery(['users', ID], () => fetchUsers(ID), {\n    staleTime: 50000,\n  })\n\n  useEffect(() => {\n    if (ID < data?.total_pages) {\n      queryClient.prefetchQuery(['users', ID + 1], () => fetchUsers(ID + 1))\n    }\n  }, [data, ID, queryClient])\n\n  return (\n    <Container maxWidth=\"md\" className={classes.container}>\n      <UsersHeader pageCount={Number(data?.total_pages)} />\n      {status === 'loading' && !data && <LoadingModal />}\n      {(status === 'error' || isNaN(ID)) && <BadRequestModal />}\n      {status === 'success' && data.data.length === 0 && <BadRequestModal />}\n\n      {status === 'success' && !isNaN(ID) && <UsersList data={data} />}\n    </Container>\n  )\n}\n\nexport default Users\n","import React from 'react'\nimport { makeStyles, Grid, Container } from '@material-ui/core'\nimport axios from 'axios'\nimport { useQuery } from 'react-query'\nimport { useParams } from 'react-router-dom'\n\nimport { UserHeader } from 'components/Headers'\nimport { LoadingModal } from 'components/Loading'\nimport { BadRequestModal } from 'components/BadRequest'\n\nasync function fetchUser(id: string) {\n  const { data } = await axios.get(`https://reqres.in/api/users/${id}`)\n  return data.data\n}\n\nconst useUserStyles = makeStyles((theme) => ({\n  container: {\n    margin: '0px auto',\n    padding: 0,\n  },\n  root: {\n    maxHeight: 'calc(100vh - 45px)',\n    overflowY: 'scroll',\n  },\n  item: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    margin: 5,\n    padding: 5,\n  },\n\n  link: {\n    textDecoration: 'none',\n    color: theme.palette.text.primary,\n    fontStyle: 'italic',\n  },\n  avatar: {\n    width: 300,\n    objectFit: 'contain',\n    maxWidth: '100%',\n    margin: '10px',\n  },\n  info: {\n    display: 'flex',\n    flexDirection: 'column',\n    width: '100%',\n    textAlign: 'center',\n    alignItems: 'center',\n  },\n  paragraph: {\n    color: theme.palette.text.primary,\n    margin: '3px',\n    maxWidth: 280,\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    fontWeight: 500,\n  },\n}))\n\nconst User = () => {\n  const { id } = useParams<{ id: string }>()\n\n  const { data, status } = useQuery(['user', id], () => fetchUser(id), {\n    staleTime: 50000,\n  })\n  const classes = useUserStyles()\n\n  return (\n    <Container maxWidth=\"md\" className={classes.container}>\n      <UserHeader />\n      {status === 'loading' && !data && <LoadingModal />}\n      {status === 'error' && <BadRequestModal />}\n      {status === 'success' && (\n        <>\n          <Grid item className={classes.root}>\n            <div className={classes.item}>\n              <img\n                src={data.avatar}\n                alt=\"user_avatar\"\n                className={classes.avatar}\n              />\n              <div className={classes.info}>\n                <p className={classes.paragraph}>\n                  Name: {data.first_name} {data.last_name}\n                </p>\n                <p className={classes.paragraph}>\n                  Email:{' '}\n                  <a\n                    className={classes.link}\n                    href={`mailto:${data.email}`}\n                    target=\"blank\"\n                  >\n                    {data.email}\n                  </a>\n                </p>\n              </div>\n            </div>\n          </Grid>\n        </>\n      )}\n    </Container>\n  )\n}\n\nexport default User\n","import React from 'react'\nimport { ClassNameMap } from '@material-ui/core/styles/withStyles'\nimport { withStyles } from '@material-ui/core/styles'\n\nexport const Wrapper = withStyles((theme) => ({\n  root: {\n    minWidth: '100vw',\n    minHeight: '100vh',\n    backgroundColor: theme.palette.background.default,\n  },\n}))(({ classes, ...props }: { classes: ClassNameMap<'root'> }) => {\n  return <div className={classes.root} {...props} />\n})\n","import React, { useContext } from 'react'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport { ThemeProvider } from '@material-ui/core'\nimport { createMuiTheme } from '@material-ui/core/styles'\n\nimport { AppContext } from 'contextProvider'\nimport Users from 'Users/Users'\nimport User from 'User/User'\nimport { BadRequestModal } from 'components/BadRequest'\nimport { Wrapper } from 'components/MainWrapper'\n\nconst App = () => {\n  const { isDarkTheme } = useContext(AppContext)\n\n  const theme = createMuiTheme({\n    palette: {\n      type: isDarkTheme ? 'dark' : 'light',\n    },\n  })\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Wrapper>\n        <Router basename=\"/testTask\">\n          <Switch>\n            <Route exact path=\"/\">\n              <Users />\n            </Route>\n            <Route path=\"/user/:id\">\n              <User />\n            </Route>\n            <Route path=\"*\">\n              <BadRequestModal />\n            </Route>\n          </Switch>\n        </Router>\n      </Wrapper>\n    </ThemeProvider>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { QueryClient, QueryClientProvider } from 'react-query'\n\nimport './index.css'\nimport App from './App'\nimport { ContextProvider } from 'contextProvider'\n\nconst queryClient = new QueryClient()\n\nReactDOM.render(\n  <React.StrictMode>\n    <ContextProvider>\n      <QueryClientProvider client={queryClient}>\n        <App />\n      </QueryClientProvider>\n    </ContextProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}