{"version":3,"sources":["localStorage.ts","contextProvider.tsx","components/UserListsTypes.tsx","components/CustomSwitchs.tsx","components/Headers.tsx","components/Loading.tsx","components/BadRequest.tsx","Users/Users.tsx","User/User.tsx","App.tsx","index.tsx"],"names":["loadState","serializedState","window","localStorage","getItem","JSON","parse","err","AppContext","createContext","viewType","setViewType","arg","isDarkTheme","setIsDarkTheme","ContextProvider","props","useState","view","dark","useEffect","state","stringify","setItem","console","log","saveState","Provider","value","children","useStylesList","makeStyles","theme","root","maxHeight","overflowY","link","textDecoration","item","display","margin","padding","boxShadow","itemIcon","flexDirection","alignItems","avatar","height","width","objectFit","marginRight","breakpoints","up","avatarIcon","maxWidth","info","color","infoIcon","textAlign","p","marginBottom","overflow","textOverflow","palette","text","primary","UsersList","data","useTheme","desktop","useMediaQuery","useContext","classes","Grid","container","className","map","user","xs","to","pathname","id","page","src","alt","first_name","last_name","email","SwitchWrapperTheme","withStyles","marginLeft","Icon","onClick","IconButton","SwitchStyled","spacing","switchBase","common","white","transform","backgroundColor","grey","opacity","border","thumb","track","borderRadius","transition","transitions","create","boxSizing","checked","focusVisible","onChange","Switch","focusVisibleClassName","disableRipple","CustomSwitch","CustomSwitchTheme","useStylesHeaders","header","justifyContent","alignContent","background","default","borderBottom","navWrapper","navLink","UsersHeader","pageCount","URLSearchParams","useLocation","search","get","ID","Number","disabled","size","edge","UserHeader","location","LoadingWrapper","position","top","left","zIndex","LoadingModal","CircularProgress","disableShrink","useStyles","fontSize","BadRequestModal","Button","variant","fetchUsers","a","axios","Users","queryClient","useQueryClient","useQuery","staleTime","status","total_pages","prefetchQuery","Container","isNaN","length","useUserStyles","fontStyle","fontWeight","User","useParams","fetchUser","href","Wrapper","minWidth","minHeight","App","createMuiTheme","type","ThemeProvider","exact","path","QueryClient","ReactDOM","render","StrictMode","QueryClientProvider","client","document","getElementById"],"mappings":"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","file":"static/js/main.c76971a7.chunk.js","sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\nexport const loadState = () => {\n    try {\n        const serializedState = window && window.localStorage.getItem('state')\n        if (serializedState === null) {\n            return []\n        }\n        return JSON.parse(serializedState)\n    } catch (err) {\n        return []\n    }\n}\n\nexport const saveState = (state: any) => {\n    try {\n        const serializedState = JSON.stringify(state)\n        window && window.localStorage.setItem('state', serializedState)\n    } catch (err) {\n        // eslint-disable-next-line no-console\n        console.log(err)\n    }\n}\n","import React, { useState, createContext, useEffect } from 'react'\nimport { loadState, saveState } from 'localStorage'\n\nexport const AppContext = createContext({\n    viewType: false,\n    setViewType: (arg: boolean) => {\n        arg\n    },\n    isDarkTheme: false,\n    setIsDarkTheme: (arg: boolean) => {\n        arg\n    },\n})\n\nexport const ContextProvider = (props: { children: JSX.Element }) => {\n    const [viewType, setViewType] = useState(\n        loadState() ? loadState().view : false\n    )\n    const [isDarkTheme, setIsDarkTheme] = useState(\n        loadState() ? loadState().dark : false\n    )\n\n    useEffect(() => saveState({ view: viewType, dark: isDarkTheme }), [\n        viewType,\n        isDarkTheme,\n    ])\n\n    return (\n        <AppContext.Provider\n            value={{\n                viewType,\n                setViewType,\n                isDarkTheme,\n                setIsDarkTheme,\n            }}\n        >\n            {props.children}\n        </AppContext.Provider>\n    )\n}\n","import React, { useContext } from 'react'\nimport { Grid } from '@material-ui/core'\nimport { makeStyles, useTheme } from '@material-ui/core/styles'\nimport useMediaQuery from '@material-ui/core/useMediaQuery'\nimport { AppContext } from 'contextProvider'\n\nimport { Link } from 'react-router-dom'\n\ninterface User {\n    id: string\n    /* eslint-disable-next-line camelcase */\n    first_name: string\n    /* eslint-disable-next-line camelcase */\n    last_name: string\n    avatar: string\n    email: string\n}\n\nconst useStylesList = makeStyles((theme) => ({\n    root: {\n        maxHeight: 'calc(100vh - 65px)',\n        overflowY: 'scroll',\n    },\n    link: {\n        textDecoration: 'none',\n    },\n    item: {\n        display: 'flex',\n        margin: '5px',\n        padding: '16px',\n        boxShadow: 'inset 0 0 10px #888',\n        '&:hover': { boxShadow: 'inset 0 0 20px #888' },\n    },\n    itemIcon: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        margin: 5,\n        padding: 5,\n        boxShadow: 'inset 0 0 10px #888',\n        '&:hover': { boxShadow: 'inset 0 0 30px #888' },\n    },\n    avatar: {\n        height: '40px',\n        width: '40px',\n        objectFit: 'contain',\n        marginRight: '10px',\n        [theme.breakpoints.up('sm')]: {\n            height: '50px',\n            width: '50px',\n        },\n    },\n    avatarIcon: {\n        height: 200,\n        objectFit: 'contain',\n        maxWidth: '100%',\n        margin: '10px',\n    },\n    info: {\n        color: 'black',\n        display: 'inline-block',\n    },\n    infoIcon: {\n        display: 'flex',\n        flexDirection: 'column',\n        color: 'black',\n        width: '100%',\n        textAlign: 'center',\n        alignItems: 'center',\n    },\n    p: {\n        padding: '0 3px',\n        margin: 0,\n        marginBottom: 8,\n        width: 240,\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        color: theme.palette.text.primary,\n        [theme.breakpoints.up('sm')]: {\n            width: 280,\n        },\n    },\n}))\n\nexport const UsersList = ({\n    data,\n}: {\n    data: { data: User[]; page: number }\n}) => {\n    const theme = useTheme()\n    const desktop = useMediaQuery(theme.breakpoints.up('md'))\n    const { viewType } = useContext(AppContext)\n    const classes = useStylesList()\n    return (\n        <Grid container className={classes.root}>\n            {data.data.map((user) => {\n                return (\n                    <Grid item xs={desktop ? 6 : 12} key={user.id}>\n                        <Link\n                            to={{\n                                pathname: `/user/${user.id}`,\n                                state: { page: data.page },\n                            }}\n                            className={classes.link}\n                        >\n                            {!viewType ? (\n                                <div className={classes.itemIcon}>\n                                    <img\n                                        src={user.avatar}\n                                        alt=\"user_avatar\"\n                                        className={classes.avatarIcon}\n                                    />{' '}\n                                    <div className={classes.infoIcon}>\n                                        <p className={classes.p}>\n                                            Name: {user.first_name}{' '}\n                                            {user.last_name}\n                                        </p>\n                                        <p className={classes.p}>\n                                            Email: {user.email}\n                                        </p>\n                                    </div>\n                                </div>\n                            ) : (\n                                <div className={classes.item}>\n                                    <img\n                                        src={user.avatar}\n                                        alt=\"user_avatar\"\n                                        className={classes.avatar}\n                                    />{' '}\n                                    <div className={classes.info}>\n                                        <p className={classes.p}>\n                                            Name: {user.first_name}{' '}\n                                            {user.last_name}\n                                        </p>\n                                        <p className={classes.p}>\n                                            Email: {user.email}\n                                        </p>\n                                    </div>\n                                </div>\n                            )}\n                        </Link>\n                    </Grid>\n                )\n            })}\n        </Grid>\n    )\n}\n","import React, { useContext } from 'react'\nimport { withStyles, Switch, IconButton } from '@material-ui/core'\nimport Brightness6 from '@material-ui/icons/Brightness6'\nimport Menu from '@material-ui/icons/Menu'\nimport Apps from '@material-ui/icons/Apps'\n\nimport { AppContext } from 'contextProvider'\nimport { ClassNameMap } from '@material-ui/core/styles/withStyles'\n\nconst SwitchWrapperTheme = withStyles((theme) => ({\n    root: {\n        marginLeft: 5,\n        [theme.breakpoints.up('sm')]: {\n            marginLeft: 110,\n        },\n    },\n}))(({ classes, ...props }: { classes: ClassNameMap<'root'> }) => {\n    return <span className={classes.root} {...props} />\n})\n\nconst Icon = withStyles((theme) => ({\n    root: {\n        padding: '12px 5px',\n        [theme.breakpoints.up('sm')]: {\n            padding: 12,\n        },\n    },\n}))(\n    ({\n        classes,\n        onClick,\n        ...props\n    }: {\n        classes: ClassNameMap<'root'>\n        onClick: () => void\n    }) => {\n        return (\n            <IconButton className={classes.root} onClick={onClick} {...props} />\n        )\n    }\n)\n\nconst SwitchStyled = withStyles((theme) => ({\n    root: {\n        width: 42,\n        height: 26,\n        padding: 0,\n        margin: theme.spacing(1),\n    },\n    switchBase: {\n        color: theme.palette.common.white,\n        padding: 1,\n        '&$checked': {\n            transform: 'translateX(16px)',\n            color: theme.palette.common.white,\n            backgroundColor: theme.palette.grey[400],\n            '& + $track': {\n                opacity: 1,\n                color: theme.palette.common.white,\n                backgroundColor: theme.palette.grey[400],\n            },\n        },\n        '&$focusVisible $thumb': {\n            color: theme.palette.grey[400],\n            border: '6px solid #fff',\n        },\n    },\n    thumb: {\n        width: 24,\n        height: 24,\n    },\n    track: {\n        borderRadius: 26 / 2,\n        border: `2px solid ${theme.palette.grey[400]}`,\n        backgroundColor: theme.palette.grey[400],\n        color: theme.palette.common.white,\n        opacity: 1,\n        transition: theme.transitions.create(['background-color', 'border']),\n        boxSizing: 'border-box',\n    },\n    checked: {},\n    focusVisible: {},\n}))(\n    ({\n        classes,\n        checked,\n        onChange,\n        ...props\n    }: {\n        classes: ClassNameMap<\n            | 'root'\n            | 'thumb'\n            | 'switchBase'\n            | 'track'\n            | 'focusVisible'\n            | 'checked'\n        >\n        checked: boolean\n        onChange: () => void\n    }) => {\n        return (\n            <Switch\n                focusVisibleClassName={classes.focusVisible}\n                disableRipple\n                checked={checked}\n                onChange={onChange}\n                classes={{\n                    root: classes.root,\n                    switchBase: classes.switchBase,\n                    thumb: classes.thumb,\n                    track: classes.track,\n                    checked: classes.checked,\n                }}\n                {...props}\n            />\n        )\n    }\n)\n\nexport const CustomSwitch = () => {\n    const { viewType, setViewType } = useContext(AppContext)\n    const changeViewType = () => setViewType(!viewType)\n    const setViewTypeToIcons = () => setViewType(false)\n    const setViewTypeToList = () => setViewType(true)\n    return (\n        <span>\n            <Icon onClick={setViewTypeToIcons}>\n                <Apps />\n            </Icon>\n            <span>\n                <SwitchStyled checked={viewType} onChange={changeViewType} />\n            </span>\n            <Icon onClick={setViewTypeToList}>\n                <Menu />\n            </Icon>\n        </span>\n    )\n}\n\nexport const CustomSwitchTheme = () => {\n    const { isDarkTheme, setIsDarkTheme } = useContext(AppContext)\n    const changeTheme = () => setIsDarkTheme(!isDarkTheme)\n    return (\n        <SwitchWrapperTheme>\n            <Icon onClick={changeTheme}>\n                <Brightness6 />\n            </Icon>\n        </SwitchWrapperTheme>\n    )\n}\n","import React from 'react'\nimport { IconButton } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\nimport ArrowBackIos from '@material-ui/icons/ArrowBackIos'\nimport ArrowForwardIos from '@material-ui/icons/ArrowForwardIos'\nimport { Link, useLocation } from 'react-router-dom'\n\nimport { CustomSwitch, CustomSwitchTheme } from 'components/CustomSwitchs'\n\nconst useStylesHeaders = makeStyles((theme) => ({\n    header: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignContent: 'center',\n        padding: 5,\n        height: 48,\n        color: theme.palette.text.primary,\n        backgroundColor: theme.palette.background.default,\n        borderBottom: `1px solid ${theme.palette.text.primary}`,\n    },\n    navWrapper: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    navLink: {\n        textDecoration: 'none',\n        color: theme.palette.text.primary,\n        display: 'flex',\n        alignItems: 'center',\n    },\n}))\n\nfunction useQueryParam() {\n    return new URLSearchParams(useLocation().search)\n}\n\nexport const UsersHeader = ({ pageCount }: { pageCount: number }) => {\n    const classes = useStylesHeaders()\n    let query = useQueryParam()\n    const page = query.get('page')\n    const ID = Number(page) || 1\n    return (\n        <div className={classes.header}>\n            <CustomSwitch />\n            <span className={classes.navWrapper}>\n                <Link to={ID === 1 ? `/?page=${ID}` : `/?page=${ID - 1}`}>\n                    <IconButton\n                        color=\"primary\"\n                        disabled={ID === 1}\n                        size={'small'}\n                    >\n                        <ArrowBackIos />\n                    </IconButton>\n                </Link>\n                <span>Page: {ID} </span>\n                <Link\n                    to={ID === pageCount ? `/?page=${ID}` : `/?page=${ID + 1}`}\n                >\n                    <IconButton\n                        color=\"primary\"\n                        disabled={ID === pageCount}\n                        size={'small'}\n                        edge={'end'}\n                    >\n                        <ArrowForwardIos />\n                    </IconButton>\n                </Link>\n            </span>\n            <CustomSwitchTheme />\n        </div>\n    )\n}\n\nexport const UserHeader = () => {\n    const classes = useStylesHeaders()\n    const location = useLocation<{ page: number }>()\n\n    return (\n        <div className={classes.header}>\n            <Link\n                to={\n                    location.state\n                        ? `/?page=${location.state.page}`\n                        : `/?page=1`\n                }\n                className={classes.navLink}\n            >\n                <ArrowBackIos />\n                BACK\n            </Link>\n            <CustomSwitchTheme />\n        </div>\n    )\n}\n","import React from 'react'\nimport { CircularProgress, withStyles } from '@material-ui/core'\nimport { ClassNameMap } from '@material-ui/core/styles/withStyles'\n\nconst LoadingWrapper = withStyles((theme) => ({\n    root: {\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        height: '100vh',\n        width: '100vw',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        backgroundColor: theme.palette.background.default,\n        opacity: 0.8,\n        zIndex: 1,\n    },\n}))(({ classes, ...props }: { classes: ClassNameMap<'root'> }) => {\n    return <div className={classes.root} {...props} />\n})\n\nexport const LoadingModal = () => {\n    return (\n        <LoadingWrapper>\n            <CircularProgress disableShrink />\n        </LoadingWrapper>\n    )\n}\n","import React from 'react'\nimport { Button, makeStyles } from '@material-ui/core'\nimport { Link } from 'react-router-dom'\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        height: '100vh',\n        width: '100vw',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n        backgroundColor: theme.palette.background.default,\n        opacity: 0.8,\n        zIndex: 1,\n    },\n    p: {\n        textAlign: 'center',\n        color: theme.palette.text.primary,\n        fontSize: 30,\n    },\n    link: {\n        textDecoration: 'none',\n    },\n}))\n\nexport const BadRequestModal = () => {\n    const classes = useStyles()\n    return (\n        <div className={classes.root}>\n            <p className={classes.p}>Something went wrong</p>\n            <Link to={'/?page=1'} className={classes.link}>\n                <Button variant=\"contained\" color=\"primary\">\n                    To Main Page\n                </Button>\n            </Link>\n        </div>\n    )\n}\n","import React, { useEffect } from 'react'\nimport axios from 'axios'\nimport { useQuery, useQueryClient } from 'react-query'\nimport { Container } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\n\nimport { UsersList } from 'components/UserListsTypes'\nimport { UsersHeader } from 'components/Headers'\nimport { LoadingModal } from 'components/Loading'\nimport { useLocation } from 'react-router-dom'\nimport { BadRequestModal } from 'components/BadRequest'\n\nconst useStyles = makeStyles({\n    container: {\n        padding: 0,\n    },\n})\n\nfunction useQueryParam() {\n    return new URLSearchParams(useLocation().search)\n}\n\nasync function fetchUsers(ID: number) {\n    const { data } = await axios.get(`https://reqres.in/api/users?page=${ID}`)\n    return data\n}\n\nconst Users = () => {\n    let query = useQueryParam()\n    const page = query.get('page')\n    const ID = Number(page)\n    const queryClient = useQueryClient()\n    const classes = useStyles()\n\n    const { status, data } = useQuery(['users', ID], () => fetchUsers(ID), {\n        staleTime: 50000,\n    })\n    useEffect(() => {\n        if (ID < data?.total_pages) {\n            queryClient.prefetchQuery(['users', ID + 1], () =>\n                fetchUsers(ID + 1)\n            )\n        }\n    }, [data, ID, queryClient])\n\n    return (\n        <Container maxWidth=\"md\" className={classes.container}>\n            <UsersHeader pageCount={Number(data?.total_pages)} />\n            {status === 'loading' && !data && <LoadingModal />}\n            {(status === 'error' || isNaN(ID)) && <BadRequestModal />}\n            {status === 'success' && data.data.length === 0 && (\n                <BadRequestModal />\n            )}\n\n            {status === 'success' && !isNaN(ID) && <UsersList data={data} />}\n        </Container>\n    )\n}\n\nexport default Users\n","import React from 'react'\nimport { makeStyles, Grid, Container } from '@material-ui/core'\nimport axios from 'axios'\nimport { useQuery } from 'react-query'\nimport { useParams } from 'react-router-dom'\n\nimport { UserHeader } from 'components/Headers'\nimport { LoadingModal } from 'components/Loading'\nimport { BadRequestModal } from 'components/BadRequest'\n\nasync function fetchUser(id: string) {\n    const { data } = await axios.get(`https://reqres.in/api/users/${id}`)\n    return data.data\n}\n\nconst useUserStyles = makeStyles((theme) => ({\n    container: {\n        margin: '0px auto',\n        padding: 0,\n    },\n    root: {\n        maxHeight: 'calc(100vh - 45px)',\n        overflowY: 'scroll',\n    },\n    item: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        margin: 5,\n        padding: 5,\n    },\n\n    link: {\n        textDecoration: 'none',\n        color: theme.palette.text.primary,\n        fontStyle: 'italic',\n    },\n    avatar: {\n        width: 300,\n        objectFit: 'contain',\n        maxWidth: '100%',\n        margin: '10px',\n    },\n    info: {\n        display: 'flex',\n        flexDirection: 'column',\n        color: 'black',\n        width: '100%',\n        textAlign: 'center',\n        alignItems: 'center',\n    },\n    p: {\n        color: theme.palette.text.primary,\n        margin: '3px',\n        maxWidth: 280,\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        fontWeight: 500,\n    },\n}))\n\nconst User = () => {\n    const { id }: { id: string } = useParams()\n\n    const { data, status } = useQuery(['user', id], () => fetchUser(id), {\n        staleTime: 50000,\n    })\n    const classes = useUserStyles()\n\n    return (\n        <Container maxWidth=\"md\" className={classes.container}>\n            <UserHeader />\n            {status === 'loading' && !data && <LoadingModal />}\n            {status === 'error' && <BadRequestModal />}\n            {status === 'success' && (\n                <>\n                    <Grid item key={data.id} className={classes.root}>\n                        <div className={classes.item}>\n                            <img\n                                src={data.avatar}\n                                alt=\"user_avatar\"\n                                className={classes.avatar}\n                            />{' '}\n                            <div className={classes.info}>\n                                <p className={classes.p}>\n                                    Name: {data.first_name} {data.last_name}\n                                </p>\n                                <p className={classes.p}>\n                                    Email:{' '}\n                                    <a\n                                        className={classes.link}\n                                        href={`mailto:${data.email}`}\n                                    >\n                                        {data.email}\n                                    </a>\n                                </p>\n                            </div>\n                        </div>\n                    </Grid>\n                </>\n            )}\n        </Container>\n    )\n}\n\nexport default User\n","import React, { useContext } from 'react'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport { ThemeProvider } from '@material-ui/core'\nimport {\n    unstable_createMuiStrictModeTheme as createMuiTheme,\n    withStyles,\n} from '@material-ui/core/styles'\nimport { AppContext } from 'contextProvider'\n\nimport Users from 'Users/Users'\nimport User from 'User/User'\nimport { BadRequestModal } from 'components/BadRequest'\nimport { ClassNameMap } from '@material-ui/core/styles/withStyles'\n\nconst Wrapper = withStyles((theme) => ({\n    root: {\n        minWidth: '100vw',\n        minHeight: '100vh',\n        backgroundColor: theme.palette.background.default,\n    },\n}))(({ classes, ...props }: { classes: ClassNameMap<'root'> }) => {\n    return <div className={classes.root} {...props} />\n})\n\nconst App = () => {\n    const { isDarkTheme } = useContext(AppContext)\n\n    const theme = createMuiTheme({\n        palette: {\n            type: isDarkTheme ? 'dark' : 'light',\n        },\n    })\n\n    return (\n        <ThemeProvider theme={theme}>\n            <Wrapper>\n                <Router>\n                    <Switch>\n                        <Route exact path=\"/\">\n                            <Users />\n                        </Route>\n                        <Route path=\"/user/:id\">\n                            <User />\n                        </Route>\n                        <Route path=\"*\">\n                            <BadRequestModal />\n                        </Route>\n                    </Switch>\n                </Router>\n            </Wrapper>\n        </ThemeProvider>\n    )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { QueryClient, QueryClientProvider } from 'react-query'\n\nimport './index.css'\nimport App from './App'\nimport { ContextProvider } from 'contextProvider'\n\nconst queryClient = new QueryClient()\n\nReactDOM.render(\n    <React.StrictMode>\n        <ContextProvider>\n            <QueryClientProvider client={queryClient}>\n                <App />\n            </QueryClientProvider>\n        </ContextProvider>\n    </React.StrictMode>,\n    document.getElementById('root')\n)\n"],"sourceRoot":""}